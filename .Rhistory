pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332){
Sum = 0
length = 0
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
Sum = Sum + sum(data[[pollutant]], na.rm = TRUE)
length = length + length(data[[pollutant]])
}
mean = Sum/length
mean
}
pollutantmean("specdata", "nitrate", 70:72)
?length
pollutantmean <- function(directory, pollutant, id = 1:332){
Sum = 0
length = 0
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
Sum = Sum + sum(data[[pollutant]], na.rm = TRUE)
length = length + length(data[[pollutant]][is.na(data[[pollutant]])])
}
mean = Sum/length
mean
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332){
Sum = 0
length = 0
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
Sum = Sum + sum(data[[pollutant]], na.rm = TRUE)
length = length + length(data[[pollutant]][!is.na(data[[pollutant]])])
}
mean = Sum/length
mean
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
?grep
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10)
a <- c(TRUE, TRUE, FALSE)
b <- a(isTRUE(a))
b <- a[isTRUE(a)]
b
a
b <- a[!isTRUE(a)]
b
b <- a[isTRUE(a)]
?isTRUE
b <- a[identical(TRUE, a)]
b <- a[identical(FALSE, a)]
b <- a[identical(TRUE, a[])]
b <- a[identical(FALSE, a)]
b <- a[identical(TRUE, a[i])]
b <- a[identical(TRUE, a)]
View(new)
View(new)
b <- isTRUE(a)
b
b <- !isTRUE(a)
b
b <- a[[!isTRUE(a)]]
b
b <- a[[isTRUE(a)]]
getwd()
data <-read.csv(./specdata/001.csv)
data <- read.csv(./specdata/001.csv)
data <- read.csv("./specdata/001.csv")
a <- data[[2]][!is.na(data[[2]]] && data[[3]][!is.na[[3]]]
a <- data[[2]][!is.na[data[[2]]] && data[[3]][!is.na[[3]]]
]
a <- data[[2]][!is.na[data[[2]]] & data[[3]][!is.na[[3]]]]
data[[2]]
a <- data[[2]][!is.na(data[[2]])] & data[[3]][!is.na(data[[3]])]
a <- data[[2]][!is.na(data[[2]])] && data[[3]][!is.na(data[[3]])]
a
a <- data[[2]][!is.na(data[[2]])] & data[[3]][!is.na(data[[3]])]
a <- data[[2]][!is.na(data[[2]])]
a <- data[[3]][!is.na(data[[3]])]
b <- data[[2]][!is.na(data[[2]])]
a <- data[1]
a
a <- data[1,1]
a
a <- data[,!is.na(data[,2]) && !is.na(data[,3])]
a
a <- data[,!is.na(data[,2])
]
a <- data[!is.na(data[,2]) && !is.na(data[,3]),]
a
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
a
length(a)
a[[1]]
a[1]
length(a[1])
length(a[[1]])
lenght[1:10]
length[1:10]
complete <- function(directory, id = 1:332){
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
length <- c(length, length(a[[1]]))
}
df = data.frame(ID = id, Length = length)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332){
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
length <- c(length, length(a[[1]]))
}
df = data.frame(id, length)
}
complete("specdata", c(2, 4, 8, 10, 12))
data.frame(1, a[[1]])
data.frame(1, length(a[[1]])
)
data.frame(ID = 1, Obs = length(a[[1]])
)
complete <- function(directory, id = 1:332){
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
obs <- c(obs, length(a[[1]]))
}
df = data.frame(id, length)
}
complete("specdata", c(2, 4, 8, 10, 12))
?c
complete <- function(directory, id = 1:332){
obs <- c()
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
obs <- c(obs, length(a[[1]]))
}
df = data.frame(id, length)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332){
obs <- c()
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
obs <- c(obs, length(a[[1]]))
}
df = data.frame(id, obs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332){
obs <- c()
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
obs <- c(obs, length(a[[1]]))
}
df = data.frame(id, obs)
df
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
r <- c()
?complete.cases
complete <- function(directory, id = 1:332){
obs <- c()
for (x in id){
a <- file.path(directory, formatC(x, width = 3, flag = "0"))
b <- paste(a, "csv", sep = ".")
data <- read.csv(b)
#    a <- data[!is.na(data[,2]) & !is.na(data[,3]),]
a <- sum(complete.cases(data))
#    obs <- c(obs, length(a[[1]]))
obs <- c(obs, a)
}
df = data.frame(id, obs)
df
}
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 1/part1/complete.R')
submit()
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc
print(cc$obd)
print(cc$obs)
cc[2]
cc[[2]]
cc[1,]
cc <- complete("specdata", 54)
print(cc$obs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "obs"])
?set.seed
.Random.seed
x <- 1:10
if(x > 5) {
x <- 0
}
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "obs"])
use
cc
x
x <- read.csv(hw1_data.csv)
x <- read.csv("hw1_data.csv")
x
length(x[is.na(x$Ozone)]
)
length(x[is.na(x$Ozone,)]
)
length(x[is.na(x[[1]])]
)
length(x[is.na(x[[1]]),]
)
length(x[is.na(x$Ozone),]
)
x[is.na(x$Ozone),]
nrow(x[is.na(x$Ozone),])
mean(x$Ozone, na.rm = TRUE)
x[x$Ozone > 31 & x$Temp > 90 ,]
y <- x[x$Ozone > 31 & x$Temp > 90 ,]
mean(y$Solar.R, na.rm = TRUE)
mean(y$Solar.R)
mean(x[x$Month = 6,]$Temp)
z <- x[x$Month = 6,]
z <- x[x$Month == 6,]
z <- x[x$Month == 6,]
mean(x[x$Month == 6,]$Temp)
max(x[x$Month == 5,]$Ozone, na.rm = TRUE)
a <- 1:10
if(a > 5) {
a <- 0
}
class(c())
library(swirl)
swirl()
?str
?gl
swirl()
head(flags)
dim(flags)
viewinfo(flags)
?viewinfo
??viewinfo
viewinfo()
class(flags)
?as.liast
?as.list
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(clas_list)
as.character(cls_list)
?as.character
?sapplly
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
Sapply(flag_colors, sum)
sapply(flag_colors, sum)
saaply(flag_colors, mean)
sapply(flag_colors, mean)
falg_shapes <- falgs[, 19:23]
falg_shapes <- flags[, 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
flag_shapes
shape
shape_mat <- sapply(flag_shapes, ramge)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
uniques_vals(flags, unique)
uniques_vals<- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
rm(uniques_vals)
unique_vals
uniques_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elm) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(falgs,unique)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(falgs$animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
?iris
head(iris)
mean(iris$Sepal.Length)
mean(iris[$Sepal.Length, ])
mean(iris["Sepal.Length", ])
mean(iris[,"Sepal.Length" ])
mean(iris[Sepal.species = "virginica","Sepal.Length" ])
mean(iris[Sepal.species == "virginica","Sepal.Length" ])
mean(iris["Sepal.species" == "virginica","Sepal.Length" ])
iris["sepal.species" == "virginica"]
iris["sepal.species" == "virginica",]
iris
iris["sepal.species" == "virginica",]
iris[, "Sepal.length"]
iris[, "Sepal.Length"]
iris[, "Sepal.Length" && "Species" == virginica]
iris[, "Sepal.Length" & "Species" == "virginica"]
iris[, "Sepal.Length" && "Species" == "virginica"]
iris[, "Sepal.Length" & "Species" == "virginica"]
iris[ iris[,"species"] == "virginica", "Sepal.Length"]
iris[ iris[,"Species"] == "virginica", "Sepal.Length"]
mean(iris[ iris[,"Species"] == "virginica", "Sepal.Length"])
head(iris)
data(mtcars)
head(mtcars)
?tapply
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)$8
tapply(mtcars$hp, mtcars$cyl, mean)[3]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1]
?mean
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x <- 1:10
makeVector(10)
makeVector(x)
a <- makeVector(x)
a
a$get()
?solve
matrix(data = c(1, 2, 3, 4), nrow =2 , ncol = 2)
a <- matrix(data = c(1, 2, 3, 4), nrow =2 , ncol = 2)
solve(A)
solve(a)
solve(a)*a
solve(-a)*a
solve(a)*a
solve(a)**a
solve(a)%*%
a
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(a)
matrix <- makeCacheMatrix(a)
matrix$get()
matrix$getInv()
cacheSolve(matrix)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix)
matrix$getInv()
cacheSolve(matrix)
matrix$getInv()
is.null(matrix$getInv())
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix)
cacheSolve(matrix)
cacheSolve(matrix)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(matrix)
matrix$getInv()
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 2/ProgrammingAssignment2/cachematrix.R')
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("../Desktop/Coursera/Course2 ( R programming)/Assignment 3")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data.frame(Name = "Prateek", Class = "Pass")
a <- data.frame(Name = "Prateek", Class = "Pass")
b <- c(a, c("Prateek", "class"))
b
rm(b)
a
?rbind.data.frame
rbind.data.frame(a, c("Prateek", "Class"))
rbind.data.frame(a, c("Prateek", "pass"))
rbind.data.frame(a, data.frame("Prateek", "pass"))
rbind.data.frame(a, data.frame("Prateek", "pass"))
rbind.data.frame(a, data.frame(Name = "Prateek", class = "pass"))
rbind.data.frame(a, data.frame(Name = "Prateek", Class = "pass"))
data.frame()
a <- data.frame
a
a <- data.frame()
a
names(a)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
data.frame(New, new1)
data.frame(New = , new1 =)
a
names(a) <- c(a, b)
names(a) <- c("a", "b")
a <- data.frame("pra", 1)
names(a) <- c("a", "b")
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
unique(data$State)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
a <- head(rankall("heart attack", 20), 10)
str(a)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Prateek/Desktop/Coursera/Course2 ( R programming)/Assignment 3/rankall.R')
